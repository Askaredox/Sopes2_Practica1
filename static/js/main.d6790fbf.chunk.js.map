{"version":3,"sources":["http-service.js","Graficas/Graficas.jsx","Procesos/Procesos.jsx","App/App.jsx","index.js"],"names":["Service","ip","DATA","ram","Math","floor","random","DATE","Date","HH","getHours","toString","MM","getMinutes","SS","getSeconds","name","Graficas","getData","datos","state","server","slice","watch","then","value","push","setState","intervalo","setInterval","clearInterval","this","className","width","height","data","margin","top","right","bottom","left","type","dataKey","stroke","isAnimationActive","strokeDasharray","length","React","Component","Column","Table","HeaderCell","Cell","Procesos","i","id","desc","onRowClick","console","log","align","fixed","rowData","onClick","alert","App","props","onSelect","active","Navbar","appearance","Header","Body","Nav","activeKey","Item","eventKey","icon","Icon","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d6790fbf.chunk.js","sourcesContent":["\nclass Service{\n    ip = '' //TODO: colocar ip aquÃ­\n    static async watch(){\n        const DATA = { ram: Math.floor((Math.random() * 100) + 1)};\n\n        const DATE = new Date();\n        const HH = DATE.getHours().toString();\n        const MM = DATE.getMinutes().toString();\n        const SS = DATE.getSeconds().toString();\n\n        return { name:`${HH}:${MM}:${SS}`, ram:DATA.ram }\n    }\n}\n\nexport default Service","import React from 'react';\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Legend } from 'recharts';\nimport './Graficas.css';\nimport Service from '../http-service';\n\nclass Graficas extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            server: [\n                { name: '00:00:00', ram: 0 },\n                { name: '00:00:00', ram: 0 },\n                { name: '00:00:00', ram: 0 },\n                { name: '00:00:00', ram: 0 },\n                { name: '00:00:00', ram: 0 },\n                { name: '00:00:00', ram: 0 },\n                { name: '00:00:00', ram: 0 },\n                { name: '00:00:00', ram: 0 },\n                { name: '00:00:00', ram: 0 },\n                { name: '00:00:00', ram: 0 },\n            ],\n        }\n        this.intervalo = setInterval(this.getData, 5000);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.intervalo);\n    }\n\n    getData = () => {\n\n        let datos = this.state.server;\n        datos = datos.slice(1);\n\n        if(this.state.server)\n            Service.watch().then(value => {\n                datos.push(value);\n                this.setState({ server: datos })\n            });\n\n    }\n\n    render() {\n        return (\n            <div className='Graphs'>\n                <h1>Graficas</h1>\n                <h3>Servidor</h3>\n                <LineChart width={600} height={300} data={this.state.server} margin={{ top: 5, right: 20, bottom: 5, left: 0 }}>\n                    <Line type=\"monotone\" dataKey=\"ram\" stroke=\"#8884d8\" isAnimationActive={false} />\n                    <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"10 10\" />\n                    <Legend />\n                    <XAxis dataKey=\"name\" />\n                    <YAxis />\n                </LineChart>\n                <h5>{this.state.server[this.state.server.length-1].ram}%</h5>\n            </div>\n        );\n    }\n}\n\nexport default Graficas;","import React from 'react';\nimport './Procesos.css';\n//import Service from '../http-service';\n\nimport { Table } from 'rsuite';\n\nconst { Column, HeaderCell, Cell } = Table;\n\nclass Procesos extends React.Component{\n    constructor(){\n        super();\n        this.state = {\n            data:[\n                {i:0, id:'code', desc:'Visual Studio Code'},\n                {i:1, id:'code', desc:'Visual Studio Code'},\n                {i:2, id:'code', desc:'Visual Studio Code'},\n                {i:3, id:'code', desc:'Visual Studio Code'},\n                {i:4, id:'code', desc:'Visual Studio Code'},\n                {i:5, id:'code', desc:'Visual Studio Code'},\n                {i:6, id:'code', desc:'Visual Studio Code'},\n                {i:7, id:'code', desc:'Visual Studio Code'},\n                {i:8, id:'code', desc:'Visual Studio Code'},\n                {i:9, id:'code', desc:'Visual Studio Code'},\n                {i:10,id:'code', desc:'Visual Studio Code'},\n                {i:11,id:'code', desc:'Visual Studio Code'},\n            ]\n        }\n    }\n\n    render(){\n        return(\n            <div className='table-v'>\n                <h1>Procesos</h1>\n                <Table\n                    height={400}\n                    data={this.state.data}\n                    onRowClick={data => {\n                        console.log(data);\n                    }}\n                >\n                    <Column width={70} align=\"center\" fixed>\n                        <HeaderCell>No.</HeaderCell>\n                        <Cell dataKey=\"i\" />\n                    </Column>\n\n                    <Column width={200} fixed>\n                        <HeaderCell>Id</HeaderCell>\n                        <Cell dataKey=\"id\" />\n                    </Column>\n\n                    <Column width={200}>\n                        <HeaderCell>descripcion</HeaderCell>\n                        <Cell dataKey=\"desc\" />\n                    </Column>\n\n                    <Column width={120} fixed=\"right\">\n                        <HeaderCell>Action</HeaderCell>\n\n                        <Cell>\n                            {rowData => {\n                                function handleAction() {\n                                    alert(`id:${rowData.id}`);\n                                }\n                                return (\n                                <span>\n                                    <a onClick={handleAction}> Kill </a> \n                                </span>\n                                );\n                            }}\n                        </Cell>\n                    </Column>\n                </Table>\n            </div>\n        );\n    }\n}\n\nexport default Procesos;","import React, { Component } from 'react'\nimport { Navbar, Icon, Nav } from 'rsuite';\nimport Graficas from '../Graficas/Graficas';\nimport Procesos from '../Procesos/Procesos';\nimport './App.css';\n\n/**\n * Componente principal del app, redirije a todo el programa\n */\nclass App extends Component{\n  constructor(props){\n    super(props);\n    this.state={\n      active: 0\n    }\n  }\n\n  render(){\n    return(\n      <div className='App'>\n        <Navbar appearance=\"inverse\">\n          <Navbar.Header>\n            <h3 className=\"navbar-brand\"> Controlador </h3>\n          </Navbar.Header>\n          <Navbar.Body>\n            <Nav onSelect={this.onSelect} activeKey={this.state.active}>\n              <Nav.Item eventKey={0} icon={<Icon icon=\"home\" />}> Procesos </Nav.Item>\n              <Nav.Item eventKey={1} icon={<Icon icon=\"area-chart\" />}> GrÃ¡ficas </Nav.Item>\n            </Nav>\n          </Navbar.Body>\n        </Navbar>\n        {\n          this.state.active === 0 ?\n            <Procesos/> :\n            <Graficas/>\n        }\n      </div>\n    )\n  }\n  /**\n   * Selecciona el item que se selecciona en el navbar\n   * @param {string} active simbolo activo\n   */\n  onSelect = (active) => {\n    this.setState({ active: active });\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport 'rsuite/dist/styles/rsuite-default.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}