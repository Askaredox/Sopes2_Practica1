{"version":3,"sources":["http-service.js","Graficas/Graficas.jsx","Procesos/Procesos.jsx","App/App.jsx","index.js"],"names":["Service","sleep","PID","Nombre","Estado","uid","mm","sub","requestOptions","mode","method","headers","fetch","URL","then","response","json","DATA","DATE","Date","HH","getHours","toString","MM","getMinutes","SS","getSeconds","name","ram","Porcentaje","milliseconds","Promise","resolve","setTimeout","Graficas","getData","datos","state","server","slice","value","push","setState","intervalo","setInterval","clearInterval","this","className","width","height","data","margin","top","right","bottom","left","type","dataKey","stroke","isAnimationActive","strokeDasharray","length","React","Component","Procesos","get_data","cpu","processes","process_to_tree","pr","tree","forEach","item","i","_","tree_item","label","children","onSelect","val","console","log","Tree","defaultExpandAll","App","props","active","Navbar","appearance","Header","Body","Nav","activeKey","Item","eventKey","icon","Icon","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9f75cf57.chunk.js","sourcesContent":["class Service {\n  static URL = \"http://104.198.201.4:8080\"; //TODO: colocar ip aquÃ­\n\n  static async cpu() {\n    await Service.sleep(300);\n    return [\n      {\n        PID: 1,\n        Nombre: \"systemd\",\n        Estado: 1,\n        uid: 0,\n        mm: 0,\n        sub: [\n          {\n            PID: 168,\n            Nombre: \"systemd-journal\",\n            Estado: 1,\n            uid: 0,\n            mm: 0,\n          },\n          {\n            PID: 202,\n            Nombre: \"systemd-udevd\",\n            Estado: 1,\n            uid: 0,\n            mm: 0,\n          },\n          {\n            PID: 325,\n            Nombre: \"multipathd\",\n            Estado: 1,\n            uid: 0,\n            mm: 0,\n          },\n          {\n            PID: 422,\n            Nombre: \"systemd-network\",\n            Estado: 1,\n            uid: 100,\n            mm: 0,\n          },\n          {\n            PID: 425,\n            Nombre: \"systemd-resolve\",\n            Estado: 1,\n            uid: 101,\n            mm: 0,\n          },\n          {\n            PID: 550,\n            Nombre: \"accounts-daemon\",\n            Estado: 1,\n            uid: 0,\n            mm: 0,\n          },\n          {\n            PID: 566,\n            Nombre: \"dbus-daemon\",\n            Estado: 1,\n            uid: 103,\n            mm: 0,\n          },\n          {\n            PID: 595,\n            Nombre: \"networkd-dispat\",\n            Estado: 1,\n            uid: 0,\n            mm: 0,\n          },\n          {\n            PID: 600,\n            Nombre: \"rsyslogd\",\n            Estado: 1,\n            uid: 104,\n            mm: 0,\n          },\n          {\n            PID: 602,\n            Nombre: \"snapd\",\n            Estado: 1,\n            uid: 0,\n            mm: 0,\n          },\n          {\n            PID: 605,\n            Nombre: \"atd\",\n            Estado: 1,\n            uid: 0,\n            mm: 0,\n          },\n          {\n            PID: 712,\n            Nombre: \"google_guest_ag\",\n            Estado: 1,\n            uid: 0,\n            mm: 0,\n          },\n          {\n            PID: 879,\n            Nombre: \"polkitd\",\n            Estado: 1,\n            uid: 0,\n            mm: 0,\n          },\n        ],\n      },\n      {\n        PID: 2,\n        Nombre: \"kthreadd\",\n        Estado: 1,\n        uid: 0,\n        mm: 0,\n        sub: [\n          {\n            PID: 3,\n            Nombre: \"rcu_gp\",\n            Estado: 1026,\n            uid: 0,\n            mm: 0,\n          },\n          {\n            PID: 4,\n            Nombre: \"rcu_par_gp\",\n            Estado: 1026,\n            uid: 0,\n            mm: 0,\n          },\n          {\n            PID: 6,\n            Nombre: \"kworker/0:0H\",\n            Estado: 1026,\n            uid: 0,\n            mm: 0,\n          },\n          {\n            PID: 9,\n            Nombre: \"mm_percpu_wq\",\n            Estado: 1026,\n            uid: 0,\n            mm: 0,\n          },\n          {\n            PID: 10,\n            Nombre: \"ksoftirqd/0\",\n            Estado: 1,\n            uid: 0,\n            mm: 0,\n          },\n          {\n            PID: 11,\n            Nombre: \"rcu_sched\",\n            Estado: 1026,\n            uid: 0,\n            mm: 0,\n          },\n          {\n            PID: 12,\n            Nombre: \"migration/0\",\n            Estado: 1,\n            uid: 0,\n            mm: 0,\n          },\n          {\n            PID: 13,\n            Nombre: \"idle_inject/0\",\n            Estado: 1,\n            uid: 0,\n            mm: 0,\n          },\n        ],\n      },\n    ];\n  }\n  static async ram() {\n    const requestOptions = {\n      mode: \"cors\",\n      method: \"GET\",\n      headers: {\n        /*'Content-Type': 'application/json', */ \"Access-Control-Allow-Origin\":\n          \"*\",\n      },\n    };\n\n    const DATA = await fetch(\n      Service.URL + \"/ram\",\n      requestOptions\n    ).then((response) => response.json());\n\n    const DATE = new Date();\n    const HH = DATE.getHours().toString();\n    const MM = DATE.getMinutes().toString();\n    const SS = DATE.getSeconds().toString();\n\n    return { name: `${HH}:${MM}:${SS}`, ram: DATA.Porcentaje };\n  }\n  static sleep = (milliseconds) => {\n    return new Promise(resolve => setTimeout(resolve, milliseconds))\n  }\n}\n\nexport default Service;\n","import React from 'react';\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Legend } from 'recharts';\nimport './Graficas.css';\nimport Service from '../http-service';\n\nclass Graficas extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            server: [\n                { name: '00:00:00', ram: 0 },\n                { name: '00:00:00', ram: 0 },\n                { name: '00:00:00', ram: 0 },\n                { name: '00:00:00', ram: 0 },\n                { name: '00:00:00', ram: 0 },\n                { name: '00:00:00', ram: 0 },\n                { name: '00:00:00', ram: 0 },\n                { name: '00:00:00', ram: 0 },\n                { name: '00:00:00', ram: 0 },\n                { name: '00:00:00', ram: 0 },\n            ],\n        }\n        this.intervalo = setInterval(this.getData, 5000);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.intervalo);\n    }\n\n    getData = () => {\n\n        let datos = this.state.server;\n        datos = datos.slice(1);\n\n        if(this.state.server)\n            Service.ram().then(value => {\n                datos.push(value);\n                this.setState({ server: datos })\n            });\n\n    }\n\n    render() {\n        return (\n            <div className='Graphs'>\n                <h1>Graficas</h1>\n                <h3>Servidor</h3>\n                <LineChart width={600} height={300} data={this.state.server} margin={{ top: 5, right: 20, bottom: 5, left: 0 }}>\n                    <Line type=\"monotone\" dataKey=\"ram\" stroke=\"#8884d8\" isAnimationActive={false} />\n                    <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"10 10\" />\n                    <Legend />\n                    <XAxis dataKey=\"name\" />\n                    <YAxis />\n                </LineChart>\n                <h5>{this.state.server[this.state.server.length-1].ram}%</h5>\n            </div>\n        );\n    }\n}\n\nexport default Graficas;","import React from \"react\";\nimport \"./Procesos.css\";\nimport Service from '../http-service';\n\nimport { Tree } from \"rsuite\";\n\nclass Procesos extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      data: [],\n    };\n  }\n  componentDidMount(){\n    this.get_data();\n  }\n\n  render() {\n    return (\n      <div className=\"table-v\">\n        <h1>Procesos</h1>\n        <Tree data={this.state.data} defaultExpandAll onSelect={this.onSelect}/>\n      </div>\n    );\n  }\n  get_data = ()=>{\n    Service.cpu().then(value => {\n      let processes = this.process_to_tree(value);\n      this.setState({data: processes })\n    });\n  }\n\n  process_to_tree=(pr)=>{\n    let tree = [];\n    if(pr){\n      pr.forEach((item,i,_) => {\n        let tree_item = {\n          label: item.Nombre,\n          value: item.PID,\n          children: this.process_to_tree(item.sub),\n          item: item\n        };\n        tree.push(tree_item);\n      });\n      return tree;\n    }\n    return null;\n  };\n\n  onSelect=(val)=>{\n    console.log(val);\n  }\n\n}\n\nexport default Procesos;\n","import React, { Component } from 'react'\nimport { Navbar, Icon, Nav } from 'rsuite';\nimport Graficas from '../Graficas/Graficas';\nimport Procesos from '../Procesos/Procesos';\nimport './App.css';\n\n/**\n * Componente principal del app, redirije a todo el programa\n */\nclass App extends Component{\n  constructor(props){\n    super(props);\n    this.state={\n      active: 0\n    }\n  }\n\n  render(){\n    return(\n      <div className='App'>\n        <Navbar appearance=\"inverse\">\n          <Navbar.Header>\n            <h3 className=\"navbar-brand\"> Controlador </h3>\n          </Navbar.Header>\n          <Navbar.Body>\n            <Nav onSelect={this.onSelect} activeKey={this.state.active}>\n              <Nav.Item eventKey={0} icon={<Icon icon=\"home\" />}> Procesos </Nav.Item>\n              <Nav.Item eventKey={1} icon={<Icon icon=\"area-chart\" />}> GrÃ¡ficas </Nav.Item>\n            </Nav>\n          </Navbar.Body>\n        </Navbar>\n        {\n          this.state.active === 0 ?\n            <Procesos/> :\n            <Graficas/>\n        }\n      </div>\n    )\n  }\n  /**\n   * Selecciona el item que se selecciona en el navbar\n   * @param {string} active simbolo activo\n   */\n  onSelect = (active) => {\n    this.setState({ active: active });\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport 'rsuite/dist/styles/rsuite-default.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}